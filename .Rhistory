str(dat)
summary(dat)
dat$Date <- as.Date(dat$Date, format = "%Y-%m-%d")  # adjust format if needed
range.Date(dat$Date, na.rm = FALSE) #weird that both are Na
is.na(dat$Date)
summary(is.na(dat$Date))
233895/(233895 +325152  )*100 #41.8% of data has missing date values
#omit missing values
library(dplyr)
dat_clean <- dat %>%
filter(!is.na(Date))
summary(is.na(dat_clean$Date)) #no NAs, total of 325152 observations
# Find min and max
range(dat_clean$Date) #"2003-06-18" "2023-02-16" ~20 years
# Define min and max
min_date <- min(dat_clean$Date, na.rm = TRUE)
max_date <- max(dat_clean$Date, na.rm = TRUE)
# Histogram with monthly breaks
library(lubridate)
hist(dat_clean$Date,
breaks = seq(from = floor_date(min_date, "month"),
to   = ceiling_date(max_date, "month"),
by   = "month"),
main = "Histogram of Dates",
xlab = "Date")
library(ggplot2)
ggplot(dat_clean, aes(x = Date)) +
geom_density(fill = "skyblue", alpha = 0.5) +
labs(title = "Density of Observations Over Time",
x = "Date", y = "Density")
#Where does most of the data lie?
q_dates <- quantile(as.numeric(dat_clean$Date), probs = c(0.25, 0.5, 0.75))
# Convert back to Date
q_dates <- as.Date(q_dates, origin = "1970-01-01")
q_dates
#create a subset of data between these dates
library(dplyr)
subset_dat <- dat_clean %>%
filter(Date >= as.Date("2013-07-15") & Date <= as.Date("2019-03-12"))
str(subset_dat)
#Observe which elements are represented
subset_dat %>% count(Element, sort = TRUE)
plot(subset_dat)
library(readxl)
STIC_Compiled_03072025 <- read_excel("C:/Users/q4q/OneDrive - Oak Ridge National Laboratory/Research/Time Series Project/STIC_Compiled_03072025.xlsx")
View(STIC_Compiled_03072025)
str(STIC_Compiled_03072025)
dat <- STIC_Compiled_03072025
colnames(dat)
library(dplyr)
#### 1. Perennial, highly developed site (p_d)
which(colnames(dat) == "BSL2.1") #col #5
p_d_dat <- dat %>%
select(5:(5+3))
#Rename col
p_d_dat <- p_d_dat %>%
rename(Observation = BSL2.1)
#Add Site col
p_d_dat <- p_d_dat %>%
mutate(Site = "BSL2.1")
#### 2. Perennial, less developed site (p_ld)
which(colnames(dat) == "NBO2") #97
p_ld_dat <- dat %>%
select(97:(97+3))
#Rename col
p_ld_dat <- p_ld_dat %>%
rename(Observation = NBO2)
#Add Site col
p_ld_dat <- p_ld_dat %>%
mutate(Site = "NBO2")
#### 3. Non-Perennial, highly developed site (np_d)
which(colnames(dat) == "BSL4.2") #33
np_d_dat <- dat %>%
select(33:(33+3))
#Rename col
np_d_dat <- np_d_dat %>%
rename(Observation = BSL4.2)
#Add Site col
np_d_dat <- np_d_dat %>%
mutate(Site = "BSL4.2")
#### 4. Non-Perennial, less developed site (np_ld)
which(colnames(dat) == "NBO3") #101
np_ld_dat <- dat %>%
select(101:(101+3))
# Rename col
np_ld_dat <- np_ld_dat %>%
rename(Observation = NBO3)
str(np_ld_dat)
#Add Site col
np_ld_dat <- np_ld_dat %>%
mutate(Site = "NBO3")
combined_dat <- bind_rows(np_ld_dat, np_d_dat, p_ld_dat, p_d_dat)
View(combined_dat)
str(combined_dat)
# Check time zone
attr(combined_dat$DateTime, "tzone") #UTC
#Standardize time
combined_dat$DateTime <- lubridate::force_tz(combined_dat$DateTime, "UTC")
# Sort by time within each site
combined_dat <- combined_dat %>%
arrange(Site, DateTime)
# Omit missing values (tsibble cannot handle)
library(dplyr)
combined_dat <- combined_dat %>%
filter(!is.na(DateTime)) %>%
as_tsibble(index = DateTime, key = Site)
# Convert to tsibble (tidyverts workflow)
install.packages("tsibble")
library(tsibble)
combined_dat <- combined_dat %>%
filter(!is.na(DateTime)) %>%
as_tsibble(index = DateTime, key = Site)
# Omit missing values (tsibble cannot handle)
library(dplyr)
combined_dat <- combined_dat %>%
filter(!is.na(DateTime)) %>%
as_tsibble(index = DateTime, key = Site)
library(tsibble)
combined_dat <- combined_dat %>%
filter(!is.na(DateTime)) %>%
as_tsibble(index = DateTime, key = Site)
# Convert to tsibble (tidyverts workflow)
install.packages("tsibble")
library(tsibble)
View(combined_dat)
combined_dat <- combined_dat %>%
filter(!is.na(DateTime)) %>%
as_tsibble(index = DateTime, key = Site)
library(tsibble)
combined_dat <- combined_dat %>%
filter(!is.na(DateTime)) %>%
as_tsibble(index = DateTime, key = Site)
library(readxl)
STIC_Compiled_03072025 <- read_excel("C:/Users/q4q/OneDrive - Oak Ridge National Laboratory/Research/Time Series Project/STIC_Compiled_03072025.xlsx")
View(STIC_Compiled_03072025)
str(STIC_Compiled_03072025)
dat <- STIC_Compiled_03072025
colnames(dat)
library(dplyr)
#### 1. Perennial, highly developed site (p_d)
which(colnames(dat) == "BSL2.1") #col #5
p_d_dat <- dat %>%
select(5:(5+3))
#Rename col
p_d_dat <- p_d_dat %>%
rename(Observation = BSL2.1)
#Add Site col
p_d_dat <- p_d_dat %>%
mutate(Site = "BSL2.1")
#### 2. Perennial, less developed site (p_ld)
which(colnames(dat) == "NBO2") #97
p_ld_dat <- dat %>%
select(97:(97+3))
#Rename col
p_ld_dat <- p_ld_dat %>%
rename(Observation = NBO2)
#Add Site col
p_ld_dat <- p_ld_dat %>%
mutate(Site = "NBO2")
#### 3. Non-Perennial, highly developed site (np_d)
which(colnames(dat) == "BSL4.2") #33
np_d_dat <- dat %>%
select(33:(33+3))
#Rename col
np_d_dat <- np_d_dat %>%
rename(Observation = BSL4.2)
#Add Site col
np_d_dat <- np_d_dat %>%
mutate(Site = "BSL4.2")
#### 4. Non-Perennial, less developed site (np_ld)
which(colnames(dat) == "NBO3") #101
np_ld_dat <- dat %>%
select(101:(101+3))
# Rename col
np_ld_dat <- np_ld_dat %>%
rename(Observation = NBO3)
str(np_ld_dat)
#Add Site col
np_ld_dat <- np_ld_dat %>%
mutate(Site = "NBO3")
#### Combine 4 datasets
combined_dat <- bind_rows(np_ld_dat, np_d_dat, p_ld_dat, p_d_dat)
View(combined_dat)
str(combined_dat)
# Check time zone
attr(combined_dat$DateTime, "tzone") #UTC
#Standardize time
combined_dat$DateTime <- lubridate::force_tz(combined_dat$DateTime, "UTC")
# Sort by time within each site
combined_dat <- combined_dat %>%
arrange(Site, DateTime)
# Omit missing values (tsibble cannot handle)
library(dplyr)
library(tsibble)
combined_dat <- combined_dat %>%
filter(!is.na(DateTime)) %>%
as_tsibble(index = DateTime, key = Site)
View(combined_dat)
# Plot vars over time
library(ggplot2)
library(tsibble)
# Plot Observation over time by Site
ggplot(combined_dat, aes(x = DateTime, y = Intensity (Lux), color = Site)) +
geom_line() +
labs(title = "Observation over Time by Site") +
theme_minimal()
# Plot Observation over time by Site
ggplot(combined_dat, aes(x = DateTime, y = 'Intensity (Lux)', color = Site)) +
geom_line() +
labs(title = "Observation over Time by Site") +
theme_minimal()
# Plot Observation over time by Site
ggplot(combined_dat, aes(x = DateTime, y = 'Temp (°C)', color = Site)) +
geom_line() +
labs(title = "Observation over Time by Site") +
theme_minimal()
# Plot Observation over time by Site
ggplot(combined_dat, aes(x = DateTime, y = 'Temp (°C)', color = Site))
# Plot Observation over time by Site
ggplot(combined_dat, aes(x = DateTime, y = 'Temp (°C)', color = Site)) +
geom_line() +
labs(title = "Observation over Time by Site") +
theme_minimal()
# Plot Observation over time by Site
ggplot(combined_dat, aes(x = DateTime, y = `Temp (°C)`, color = Site)) +
geom_line() +
labs(title = "Temperature over Time by Site") +
theme_minimal()
# Plot Observation over time by Site
ggplot(combined_dat, aes(x = DateTime, y = `Intensity (Lux)`, color = Site)) +
geom_line() +
labs(title = "Temperature over Time by Site") +
theme_minimal()
str(STIC_Compiled_03072025)
# Find time series with longest time frame
dat <- dat %>%
filter(!is.na(DateTime))
# Find time series with longest time frame
library(dplyr)
dat <- dat %>%
filter(!is.na(DateTime))
str(dat)
# Plot Observation over time by Site
ggplot(combined_dat, aes(x = DateTime, y = `Temp (°C)`, color = Site)) +
geom_line() +
labs(title = "Temperature over Time by Site") +
theme_minimal()
#### 1. Perennial, highly developed site (p_d)
which(colnames(dat) == "BSL2.3") #col #5
library(readxl)
STIC_Compiled_03072025 <- read_excel("C:/Users/q4q/OneDrive - Oak Ridge National Laboratory/Research/Time Series Project/STIC_Compiled_03072025.xlsx")
View(STIC_Compiled_03072025)
str(STIC_Compiled_03072025)
dat <- STIC_Compiled_03072025
colnames(dat)
str(dat)
"BSL2.3" %in% colnames(dat) #Present***********
#### 1. Perennial, highly developed site (p_d)
which(colnames(dat) == "BSL2.3") #col #5
p_d_dat <- dat %>%
select(13:(13+3))
#Rename col
p_d_dat <- p_d_dat %>%
rename(Observation = BSL2.1)
#Add Site col
p_d_dat <- p_d_dat %>%
mutate(Site = "BSL2.1")
#Rename col
p_d_dat <- p_d_dat %>%
rename(Observation = BSL2.3)
#Add Site col
p_d_dat <- p_d_dat %>%
mutate(Site = "BSL2.3")
#### 2. Perennial, less developed site (p_ld)
which(colnames(dat) == "NBO2") #97
p_ld_dat <- dat %>%
select(97:(97+3))
#Rename col
p_ld_dat <- p_ld_dat %>%
rename(Observation = NBO2)
#Add Site col
p_ld_dat <- p_ld_dat %>%
mutate(Site = "NBO2")
#### 3. Non-Perennial, highly developed site (np_d)
which(colnames(dat) == "BSL4.2") #33
np_d_dat <- dat %>%
select(33:(33+3))
#Rename col
np_d_dat <- np_d_dat %>%
rename(Observation = BSL4.2)
#Add Site col
np_d_dat <- np_d_dat %>%
mutate(Site = "BSL4.2")
#### 4. Non-Perennial, less developed site (np_ld)
which(colnames(dat) == "NBO3") #101
np_ld_dat <- dat %>%
select(101:(101+3))
# Rename col
np_ld_dat <- np_ld_dat %>%
rename(Observation = NBO3)
str(np_ld_dat)
#Add Site col
np_ld_dat <- np_ld_dat %>%
mutate(Site = "NBO3")
combined_dat <- bind_rows(np_ld_dat, np_d_dat, p_ld_dat, p_d_dat)
View(combined_dat)
str(combined_dat)
# Check time zone
attr(combined_dat$DateTime, "tzone") #UTC
#Standardize time
combined_dat$DateTime <- lubridate::force_tz(combined_dat$DateTime, "UTC")
# Sort by time within each site
combined_dat <- combined_dat %>%
arrange(Site, DateTime)
# Omit missing values (tsibble cannot handle)
library(dplyr)
library(tsibble)
combined_dat <- combined_dat %>%
filter(!is.na(DateTime)) %>%
as_tsibble(index = DateTime, key = Site)
View(combined_dat)
# Install time-series packages
install.packages("fable") #Forecasting tables (ARIMA modeling)
install.packages("feasts") #Time Series Features & Decomposition: seasonal decomposition, autocorrelation
# Plot vars over time
library(ggplot2)
library(tsibble)
# Plot vars over time
library(ggplot2)
library(tsibble)
# Plot Observation over time by Site
ggplot(combined_dat, aes(x = DateTime, y = `Temp (°C)`, color = Site)) +
geom_line() +
labs(title = "Temperature over Time by Site") +
theme_minimal()
# Truncate time
combined_dat$DateTime
# Truncate time
# When is the last observation for NBO3?
combined_dat %>%
filter(Site == "NBO3") %>%
summarise(last_observation = max(DateTime, na.rm = TRUE))
# Truncate time
# When is the last observation for NBO3?
library(dplyr)
combined_dat %>%
filter(Site == "NBO3") %>%
summarise(last_observation = max(DateTime, na.rm = TRUE))
# Truncate time
# When is the last observation for NBO3?
last_idx <- max(which(!is.na(dat$NBO3)))
dat$DateTime[last_idx]
# Truncate time
# When is the last observation for NBO3?
last_idx <- max(which(!is.na(combined_dat$NBO3)))
combined_dat$DateTime[last_idx]
# Truncate time
# When is the last observation for NBO3?
last_idx <- max(which(!is.na(combined_dat$'NBO3')))
combined_dat$DateTime[last_idx]
# Truncate time
# When is the last observation for NBO3?
combined_dat %>%
filter(Site == "NBO3") %>%
summarise(last_observation = max(DateTime, na.rm = TRUE))
str(combined_dat)
---
title: "R Notebook"
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
setwd("C:/Users/q4q/repos/DSE511_Intro_to_R")
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
# Load libraries
library(tidyverse)
library(palmerpenguins) #example dataset
library(broom)
# 1. Import
penguins <- penguins   # comes preloaded from palmerpenguins
# 2. Tidy
# Already tidy: each row = penguin, columns = variables
# 3. Transform
penguins_summary <- penguins |>
drop_na(bill_length_mm, species) |>
group_by(species) |>
summarise(mean_bill = mean(bill_length_mm))
# 4. Visualize
ggplot(penguins, aes(x = species, y = bill_length_mm, fill = species)) +
geom_boxplot() +
labs(title = "Penguin Bill Length by Species")
# 5. Model
model <- lm(bill_length_mm ~ species, data = penguins)
tidy(model)   # clean, tabular model output
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
library(tidyverse)
library(palmerpenguins) # example dataset
library(broom)
penguins <- penguins   # comes preloaded from palmerpenguins
head(penguins)
penguins <- penguins |>
drop_na(bill_length_mm, species)
summary(penguins)
penguins <- penguins |>
drop_na(bill_length_mm, species)
summary(penguins)
penguins <- penguins |>
drop_na(bill_length_mm, species)
head(penguins)
penguins <- penguins |>
drop_na(bill_length_mm, species)
penguins_summary <- penguins |>
group_by(species) |>
summarise(mean_bill = mean(bill_length_mm))
penguins_summary
penguin_groups <- penguins |>
group_by(species) |>
summarise(mean_bill = mean(bill_length_mm))
summary(penguin_groups)
penguin_groups <- penguins |>
group_by(species) |>
summarise(mean_bill = mean(bill_length_mm))
penguin_groups
penguins_summary <- penguins |>
group_by(species) |>
summarise(mean_bill = mean(bill_length_mm))
penguins_summary
ggplot(penguins, aes(x = species, y = bill_length_mm, fill = species)) +
geom_boxplot() +
labs(title = "Penguin Bill Length by Species")
model <- lm(bill_length_mm ~ species, data = penguins)
summary(model)
model <- lm(bill_length_mm ~ species, data = penguins)
tidy(model)
model <- lm(bill_length_mm ~ species, data = penguins)
plot(model)
model <- lm(bill_length_mm ~ species, data = penguins)
summary(model)
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
rmarkdown::render("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
head(palmerpenguins)
library(tidyverse)
library(palmerpenguins) #example dataset built in r
head(palmerpenguins)
head(palmerpenguins)
head(penguins)
head(penguins)
summary(penguins)
head(penguins)
summary(penguins)
str(penguins)
str(penguins)
head(penguins)
head(penguins)
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
penguins_clean <- penguins %>%
drop_na()
penguins_long <- penguins_clean %>%
pivot_longer(
cols = c(bill_length_mm, bill_depth_mm),
names_to = "measurement",
values_to = "value"
)
penguins_long <- penguins_clean %>%
pivot_longer(
cols = c(bill_length_mm, bill_depth_mm),
names_to = "measurement",
values_to = "value"
)
head(penguins_long)
penguins_long <- penguins %>%
drop_na() %>%   # Remove rows with missing values
pivot_longer(
cols = c(bill_length_mm, bill_depth_mm),
names_to = "measurement",
values_to = "value"
)
penguins_long <- penguins %>%
drop_na() %>%   # Remove rows with missing values
pivot_longer(
cols = c(bill_length_mm, bill_depth_mm),
names_to = "measurement",
values_to = "value"
)
penguins_long
glimpse(penguins) #shows structure too
str(penguins) #shows structure too
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
penguins_filtered <- penguins_long %>%
filter(value > 40)
ggplot(penguins_long, aes(x = species, y = value, color = measurement)) +
geom_jitter(width = 0.2, height = 0) +  # Adds points with slight horizontal jitter
labs(
title = "Bill Measurements by Penguin Species",
x = "Species",
y = "Measurement (mm)",
color = "Measurement Type"
) +
theme_minimal()
ggplot(penguins_clean, aes(x = species, y = bill_length_mm, fill = species)) +
geom_boxplot() +
labs(
title = "Bill Length by Penguin Species",
x = "Species",
y = "Bill Length (mm)"
)
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
source("C:/Users/q4q/repos/DSE511_Intro_to_R/Examples.Rmd")
